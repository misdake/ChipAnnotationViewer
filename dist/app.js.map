{"version":3,"file":"app.js","sources":["../ts/util/ScreenRect.ts","../ts/Renderer.ts","../ts/util/Transform.ts","../ts/Camera.ts","../ts/data/Data.ts","../ts/Canvas.ts","../ts/util/NetUtil.ts","../ts/Layer.ts","../ts/drawable/Drawable.ts","../ts/drawable/DrawableImage.ts","../ts/MouseListener.ts","../ts/util/Color.ts","../ts/util/Ui.ts","../ts/layers/LayerImage.ts","../ts/util/AABB.ts","../ts/drawable/DrawablePolyline.ts","../ts/layers/Selection.ts","../ts/layers/LayerPolylineView.ts","../ts/util/Size.ts","../ts/layers/LayerPolylineEdit.ts","../ts/drawable/DrawableText.ts","../ts/layers/LayerTextView.ts","../ts/layers/LayerTextEdit.ts","../ts/util/GithubUtil.ts","../ts/App.ts"],"sourcesContent":["export class ScreenRect {\r\n    public readonly left: number;\r\n    public readonly top: number;\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n\r\n    public constructor(left: number, top: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.top = top;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n}","import {Canvas} from \"./Canvas\";\r\nimport {Camera} from \"./Camera\";\r\nimport {Transform} from \"./util/Transform\";\r\nimport {Size} from \"./util/Size\";\r\nimport {ScreenRect} from \"./util/ScreenRect\";\r\nimport {Point} from \"./drawable/DrawablePolyline\";\r\n\r\nexport class Renderer {\r\n    private canvas: Canvas;\r\n    private canvasElement: HTMLCanvasElement;\r\n    private context: CanvasRenderingContext2D;\r\n\r\n    public constructor(canvas: Canvas, canvasElement: HTMLCanvasElement, context: CanvasRenderingContext2D) {\r\n        this.canvas = canvas;\r\n        this.canvasElement = canvasElement;\r\n        this.context = context;\r\n    }\r\n\r\n    public clear(): void {\r\n        this.context.fillStyle = \"#000000\";\r\n        this.context.fillRect(0, 0, this.canvasElement.width, this.canvasElement.height);\r\n    }\r\n\r\n    public setColor(color: string) {\r\n        this.context.fillStyle = color;\r\n        this.context.strokeStyle = color;\r\n    }\r\n    public setFillColor(color: string) {\r\n        this.context.fillStyle = color;\r\n    }\r\n    public setStrokeColor(color: string) {\r\n        this.context.strokeStyle = color;\r\n    }\r\n\r\n    public calculateLineWidth(camera: Camera, lineWidth?: Size): number {\r\n        if (!lineWidth) return 1;\r\n        let onScreen = lineWidth.onScreen;\r\n        let onCanvas = camera.canvasSizeToScreen(lineWidth.onCanvas);\r\n        let ofScreenSize = lineWidth.ofScreen * Math.min(this.canvasElement.width, this.canvasElement.height);\r\n        return onScreen + onCanvas + ofScreenSize;\r\n    }\r\n\r\n\r\n    //---------------------------------------------\r\n    //polyline\r\n\r\n    public renderPolyline(camera: Camera, points: Point[], closed: boolean, fill: boolean, stroke: boolean, lineWidth?: Size) {\r\n        if (points.length == 0) return;\r\n\r\n        this.context.lineWidth = this.calculateLineWidth(camera, lineWidth);\r\n        this.context.beginPath();\r\n        this.context.lineCap = \"round\";\r\n        this.context.lineJoin = \"round\";\r\n\r\n        let start = camera.canvasToScreen(points[0].x, points[0].y);\r\n        this.context.moveTo(start.x, start.y);\r\n        for (let i = 1; i < points.length; i++) {\r\n            let point = camera.canvasToScreen(points[i].x, points[i].y);\r\n            this.context.lineTo(point.x, point.y);\r\n        }\r\n        if (closed) {\r\n            this.context.closePath();\r\n        }\r\n\r\n        if (fill) {\r\n            this.context.fill();\r\n        }\r\n        if (stroke) {\r\n            this.context.stroke();\r\n        }\r\n    }\r\n\r\n    //polyline\r\n    //---------------------------------------------\r\n\r\n\r\n    //---------------------------------------------\r\n    //image\r\n\r\n    public testImageVisibility(camera: Camera, image: HTMLImageElement, transform: Transform, width: number, height: number, range: number): ScreenRect {\r\n        //transform to screen space\r\n        let point = camera.canvasToScreen(transform.position.x, transform.position.y);\r\n        let targetW = camera.canvasSizeToScreen(width);\r\n        let targetH = camera.canvasSizeToScreen(height);\r\n\r\n        //skip out-of-screen images\r\n        if (point.x - range > this.canvas.getWidth() || point.y - range > this.canvas.getHeight()) return null;\r\n        if (point.x + targetW + range < 0 || point.y + targetH + range < 0) return null;\r\n\r\n        return new ScreenRect(point.x, point.y, targetW, targetH);\r\n    }\r\n\r\n    public renderImage(camera: Camera, image: HTMLImageElement, transform: Transform, width: number, height: number) {\r\n        let rect = this.testImageVisibility(camera, image, transform, width, height, 0);\r\n        this.drawImage(image, rect);\r\n    }\r\n\r\n    public drawImage(image: HTMLImageElement, rect: ScreenRect) {\r\n        if (rect) {\r\n            //actually render image\r\n            this.context.drawImage(image, rect.left, rect.top, rect.width, rect.height);\r\n        }\r\n    }\r\n\r\n    //image\r\n    //---------------------------------------------\r\n\r\n\r\n    //---------------------------------------------\r\n    //shape\r\n\r\n    public renderCircle(camera: Camera, x: number, y: number, radius: number, fill: boolean, stroke: boolean, lineWidth?: Size) {\r\n        let position = camera.canvasToScreen(x, y);\r\n        let size = camera.canvasSizeToScreen(radius);\r\n        this.drawCircle(position.x, position.y, size, fill, stroke);\r\n        this.context.lineWidth = this.calculateLineWidth(camera, lineWidth);\r\n    }\r\n\r\n    public drawCircle(x: number, y: number, radius: number, fill: boolean, stroke: boolean, lineWidth?: number) {\r\n        if (lineWidth) this.context.lineWidth = lineWidth;\r\n\r\n        this.context.beginPath();\r\n        this.context.arc(x, y, radius, 0, Math.PI * 2);\r\n        this.context.closePath();\r\n\r\n        if (fill) {\r\n            this.context.fill();\r\n        }\r\n        if (stroke) {\r\n            this.context.stroke();\r\n        }\r\n    }\r\n\r\n    public drawRect(x1: number, y1: number, x2: number, y2: number, fill: boolean, stroke: boolean, lineWidth?: number) {\r\n        if (lineWidth) this.context.lineWidth = lineWidth;\r\n\r\n        this.context.beginPath();\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x1, y2);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.lineTo(x2, y1);\r\n        this.context.closePath();\r\n\r\n        if (fill) {\r\n            this.context.fill();\r\n        }\r\n        if (stroke) {\r\n            this.context.stroke();\r\n        }\r\n    }\r\n\r\n    //shape\r\n    //---------------------------------------------\r\n\r\n\r\n    //---------------------------------------------\r\n    //text\r\n\r\n    public measureText(camera: Camera, text: string, fontSize: Size) {\r\n        let size = this.calculateLineWidth(camera, fontSize);\r\n        this.context.font = size + \"px Arial\";\r\n        let textMetrics = this.context.measureText(text);\r\n        return [textMetrics.width, size];\r\n    }\r\n\r\n    public renderText(camera: Camera, text: string, fontSize: number, x: number, y: number, anchorX: CanvasTextAlign, anchorY: CanvasTextBaseline) {\r\n        let position = camera.canvasToScreen(x, y);\r\n        this.drawText(text, fontSize, position.x, position.y, anchorX, anchorY);\r\n    }\r\n\r\n    public drawText(text: string, fontSize: number, x: number, y: number, anchorX: CanvasTextAlign, anchorY: CanvasTextBaseline) {\r\n        this.context.textAlign = anchorX;\r\n        this.context.textBaseline = anchorY;\r\n        this.context.font = fontSize + \"px Arial\";\r\n        this.context.fillText(text, x, y);\r\n    }\r\n\r\n    //text\r\n    //---------------------------------------------\r\n}\r\n","export class Transform {\r\n    public readonly position: Position = new Position(0, 0);\r\n}\r\n\r\nexport class Position {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","import {Map} from \"./data/Map\";\r\nimport {Canvas} from \"./Canvas\";\r\nimport {Position} from \"./util/Transform\";\r\nimport {AABB} from \"./util/AABB\";\r\n\r\nexport class Camera {\r\n    private canvas: Canvas;\r\n\r\n    private zoom: number;\r\n    private zoomMin: number;\r\n    private zoomMax: number;\r\n\r\n    private position: Position = new Position(0, 0);\r\n\r\n    private xMin: number;\r\n    private xMax: number;\r\n    private yMin: number;\r\n    private yMax: number;\r\n\r\n    public constructor() {\r\n    }\r\n\r\n    public load(canvas: Canvas, map: Map) {\r\n        this.canvas = canvas;\r\n        this.zoomMin = 0;\r\n        this.zoomMax = map.maxLevel;\r\n        this.zoom = map.maxLevel;\r\n        this.checkZoom();\r\n\r\n        this.position.x = map.width / 2;\r\n        this.position.y = map.height / 2;\r\n        this.xMin = 0;\r\n        this.xMax = map.width;\r\n        this.yMin = 0;\r\n        this.yMax = map.height;\r\n    }\r\n    public moveXy(dx: number, dy: number) {\r\n        this.position.x += dx;\r\n        this.position.y += dy;\r\n        this.checkXy();\r\n    }\r\n    private checkXy() {\r\n        this.position.x = Math.min(Math.max(this.position.x, this.xMin), this.xMax);\r\n        this.position.y = Math.min(Math.max(this.position.y, this.yMin), this.yMax);\r\n    }\r\n\r\n    public getZoom(): number {\r\n        return this.zoom;\r\n    }\r\n    public changeZoomBy(amount: number) {\r\n        this.zoom += amount;\r\n        this.checkZoom();\r\n    }\r\n    public setZoomTo(zoom: number) {\r\n        this.zoom = zoom;\r\n        this.checkZoom();\r\n    }\r\n    private checkZoom() {\r\n        this.zoom = Math.min(Math.max(this.zoom, this.zoomMin), this.zoomMax);\r\n    }\r\n\r\n\r\n    private scale: number;\r\n    private tx: number;\r\n    private ty: number;\r\n\r\n    public action() {\r\n        if (!this.canvas) return;\r\n        this.checkXy();\r\n        this.checkZoom();\r\n\r\n        let scale = 1.0 / (1 << this.zoom);\r\n        this.scale = scale;\r\n        this.tx = this.canvas.getWidth() / 2 - this.position.x * scale;\r\n        this.ty = this.canvas.getHeight() / 2 - this.position.y * scale;\r\n    }\r\n\r\n    public screenXyToCanvas(x: number, y: number): Position {\r\n        let targetX = (x - this.tx) / this.scale;\r\n        let targetY = (y - this.ty) / this.scale;\r\n        return new Position(targetX, targetY);\r\n    }\r\n    public canvasToScreen(x: number, y: number): Position {\r\n        let targetX = x * this.scale + this.tx;\r\n        let targetY = y * this.scale + this.ty;\r\n        return new Position(targetX, targetY);\r\n    }\r\n    public screenSizeToCanvas(s: number): number {\r\n        return s / this.scale;\r\n    }\r\n    public canvasSizeToScreen(s: number): number {\r\n        return s * this.scale;\r\n    }\r\n\r\n    public canvasAABBInScreen(aabb: AABB): boolean {\r\n        let x1 = aabb.x1 * this.scale + this.tx;\r\n        let y1 = aabb.y1 * this.scale + this.ty;\r\n        let x2 = aabb.x2 * this.scale + this.tx;\r\n        let y2 = aabb.y2 * this.scale + this.ty;\r\n\r\n        let w = this.canvas.getWidth();\r\n        let h = this.canvas.getHeight();\r\n        return !(x2 < 0 || x1 > w || y2 < 0 || y1 > h);\r\n    }\r\n}\r\n","import {DrawablePolylinePack} from \"../drawable/DrawablePolyline\";\r\nimport {DrawableTextPack} from \"../drawable/DrawableText\";\r\n\r\nexport class Data {\r\n    title: string;\r\n    polylines: DrawablePolylinePack[];\r\n    texts: DrawableTextPack[];\r\n}","import {Layer} from \"./Layer\";\r\nimport {Map} from \"./data/Map\";\r\nimport {Renderer} from \"./Renderer\";\r\nimport {Camera} from \"./Camera\";\r\nimport {Data} from \"./data/Data\";\r\n\r\nexport class Canvas {\r\n    private readonly domElement: HTMLElement;\r\n    private readonly canvasElement: HTMLCanvasElement;\r\n    private readonly context: CanvasRenderingContext2D;\r\n    private readonly renderer: Renderer;\r\n    private readonly camera: Camera;\r\n\r\n    private width: number;\r\n    private height: number;\r\n\r\n    public constructor(domElement: HTMLElement, id: string) {\r\n        this.domElement = domElement;\r\n        this.domElement.innerHTML += \"<canvas id=\\\"\" + id + \"\\\" style='width:100%;height:100%;overflow:hidden'></canvas>\";\r\n\r\n        this.domElement.oncontextmenu = function (ev) {\r\n            return false; //disable context menu\r\n        };\r\n\r\n        this.canvasElement = document.getElementById(id) as HTMLCanvasElement;\r\n        this.context = this.canvasElement.getContext(\"2d\");\r\n        this.camera = new Camera();\r\n        this.renderer = new Renderer(this, this.canvasElement, this.context);\r\n\r\n        this.width = this.canvasElement.clientWidth;\r\n        this.height = this.canvasElement.clientHeight;\r\n\r\n        let self = this;\r\n        window.addEventListener('resize', function () {\r\n            self.requestRender();\r\n        })\r\n    }\r\n\r\n    public getCamera(): Camera {\r\n        return this.camera;\r\n    }\r\n\r\n    public init(): void {\r\n        this.layers = [];\r\n\r\n        this.canvasElement.onclick = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.mouseListener && layer.mouseListener.onclick(event)) break;\r\n            }\r\n        };\r\n        this.canvasElement.ondblclick = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.mouseListener && layer.mouseListener.ondblclick(event)) break;\r\n            }\r\n        };\r\n        this.canvasElement.onwheel = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.mouseListener && layer.mouseListener.onwheel(event)) break;\r\n            }\r\n        };\r\n        this.canvasElement.onmousedown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.mouseListener && layer.mouseListener.onmousedown(event)) break;\r\n            }\r\n        };\r\n        this.canvasElement.onmouseup = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.mouseListener && layer.mouseListener.onmouseup(event)) break;\r\n            }\r\n        };\r\n        this.canvasElement.onmousemove = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.mouseListener && layer.mouseListener.onmousemove(event)) break;\r\n            }\r\n        };\r\n        this.canvasElement.onmouseout = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.mouseListener && layer.mouseListener.onmouseout(event)) break;\r\n            }\r\n        };\r\n\r\n        this.canvasElement.onkeydown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.keyboardListener && layer.keyboardListener.onkeydown(event)) break;\r\n            }\r\n        };\r\n        this.canvasElement.onkeyup = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.keyboardListener && layer.keyboardListener.onkeyup(event)) break;\r\n            }\r\n        };\r\n        this.canvasElement.onkeypress = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            let length = this.layers.length;\r\n            for (let i = length - 1; i >= 0; i--) {\r\n                let layer = this.layers[i];\r\n                if (layer.keyboardListener && layer.keyboardListener.onkeypress(event)) break;\r\n            }\r\n        };\r\n    }\r\n\r\n    private layers: Layer[];\r\n\r\n    public addLayer(layer: Layer): void {\r\n        this.layers.push(layer);\r\n    }\r\n\r\n    public findLayer(name: string): Layer {\r\n        for (const layer of this.layers) {\r\n            if (layer.name == name) {\r\n                return layer;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getWidth(): number {\r\n        return this.width;\r\n    }\r\n\r\n    public getHeight(): number {\r\n        return this.height;\r\n    }\r\n\r\n    private renderNext = false;\r\n    public requestRender(): void {\r\n        if (this.renderNext) return;\r\n        this.renderNext = true;\r\n        let self = this;\r\n        requestAnimationFrame(function () {\r\n            self.renderNext = false;\r\n            self.render();\r\n        })\r\n    }\r\n\r\n    private map: Map = null;\r\n    private data: Data = null;\r\n    public loadMap(map: Map): void {\r\n        if (!this.map || this.map.name != map.name) {\r\n            this.camera.load(this, map);\r\n            for (let layer of this.layers) {\r\n                layer.loadMap(map);\r\n            }\r\n        }\r\n        this.map = map;\r\n    }\r\n    public loadData(data: Data): void {\r\n        if (this.data != data) {\r\n            for (let layer of this.layers) {\r\n                layer.loadData(data);\r\n            }\r\n        }\r\n        this.data = data;\r\n    }\r\n\r\n    public save(): Data {\r\n        let data = new Data();\r\n        for (let layer of this.layers) {\r\n            layer.saveData(data);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    public render(): void {\r\n        this.width = this.canvasElement.clientWidth;\r\n        this.height = this.canvasElement.clientHeight;\r\n        if (this.canvasElement.width !== this.width) this.canvasElement.width = this.width;\r\n        if (this.canvasElement.height !== this.height) this.canvasElement.height = this.height;\r\n\r\n        this.camera.action();\r\n\r\n        this.renderer.clear();\r\n        for (let layer of this.layers) {\r\n            layer.render(this.renderer);\r\n        }\r\n    }\r\n}\r\n","export class NetUtil {\r\n    public static get(url: string, callback: (text: string) => void) {\r\n        let request = new XMLHttpRequest();\r\n        request.onreadystatechange = function () {\r\n            if (request.readyState == 4 && request.status == 200) {\r\n                callback(request.responseText);\r\n            }\r\n        };\r\n        request.open(\"GET\", url, true);\r\n        request.send();\r\n    }\r\n}\r\n","import {Map} from \"./data/Map\";\r\nimport {Canvas} from \"./Canvas\";\r\nimport {Camera} from \"./Camera\";\r\nimport {Renderer} from \"./Renderer\";\r\nimport {MouseListener} from \"./MouseListener\";\r\nimport {KeyboardListener} from \"./KeyboardListener\";\r\nimport {Data} from \"./data/Data\";\r\n\r\nexport class Layer {\r\n\r\n    public readonly name: string;\r\n\r\n    protected readonly canvas: Canvas;\r\n    protected readonly camera: Camera;\r\n\r\n    protected _mouseListener?: MouseListener = null;\r\n    protected _keyboardListener?: KeyboardListener = null;\r\n    get mouseListener(): MouseListener {\r\n        return this._mouseListener;\r\n    }\r\n    get keyboardListener(): KeyboardListener {\r\n        return this._keyboardListener;\r\n    }\r\n\r\n    public constructor(name: string, canvas: Canvas) {\r\n        this.name = name;\r\n        this.canvas = canvas;\r\n        this.camera = canvas.getCamera();\r\n    }\r\n\r\n    public loadMap(map: Map): void {\r\n\r\n    }\r\n\r\n    public loadData(data: Data): void {\r\n\r\n    }\r\n\r\n    public saveData(data: Data): void {\r\n\r\n    }\r\n\r\n    public render(renderer: Renderer): void {\r\n\r\n    }\r\n\r\n    public unload(): void {\r\n\r\n    }\r\n}\r\n","import {Canvas} from \"../Canvas\";\r\nimport {Camera} from \"../Camera\";\r\nimport {Renderer} from \"../Renderer\";\r\nimport {Transform} from \"../util/Transform\";\r\n\r\nexport class Drawable {\r\n\r\n    public constructor() {\r\n    }\r\n\r\n    public readonly transformation: Transform = new Transform();\r\n\r\n    public render(canvas: Canvas, renderer: Renderer, camera: Camera): void {\r\n    }\r\n\r\n}","import {Drawable} from \"./Drawable\";\r\nimport {Canvas} from \"../Canvas\";\r\nimport {Renderer} from \"../Renderer\";\r\nimport {Camera} from \"../Camera\";\r\n\r\nexport class DrawableImage extends Drawable {\r\n\r\n    private readonly img: HTMLImageElement;\r\n\r\n    private readonly w: number;\r\n    private readonly h: number;\r\n\r\n    private readonly src: string;\r\n    private loading: boolean;\r\n    private loaded: boolean;\r\n\r\n    public constructor(src: string, x: number, y: number, w: number, h: number, onload: (image: DrawableImage) => void) {\r\n        super();\r\n        this.transformation.position.x = x;\r\n        this.transformation.position.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n        this.img = new Image();\r\n        // img.src is not set, will be set and image will start loading once it is visible to camera.\r\n\r\n        this.src = src;\r\n        this.loaded = false;\r\n\r\n        let self = this;\r\n        this.img.onload = ev => {\r\n            this.loaded = true;\r\n            if (onload) onload(self);\r\n        }\r\n    }\r\n\r\n    private loadIfNotLoaded() {\r\n        if (!this.loading) {\r\n            this.loading = true;\r\n            this.img.src = this.src;\r\n        }\r\n    }\r\n\r\n    public render(canvas: Canvas, renderer: Renderer, camera: Camera): void {\r\n        let rect = renderer.testImageVisibility(camera, this.img, this.transformation, this.w, this.h, 100);\r\n        if (rect) {\r\n            this.loadIfNotLoaded();\r\n            if (this.loaded) {\r\n                renderer.drawImage(this.img, rect);\r\n            }\r\n        }\r\n    }\r\n\r\n}","export class MouseListener {\r\n    public onclick(event: MouseEvent): boolean {\r\n        return false;\r\n    }\r\n    public ondblclick(event: MouseEvent): boolean {\r\n        return false;\r\n    }\r\n\r\n    public onwheel(event: WheelEvent): boolean {\r\n        return false;\r\n    }\r\n\r\n    public onmousedown(event: MouseEvent): boolean {\r\n        return false;\r\n    }\r\n    public onmouseup(event: MouseEvent): boolean {\r\n        return false;\r\n    }\r\n    public onmousemove(event: MouseEvent): boolean {\r\n        return false;\r\n    }\r\n    public onmouseout(event: MouseEvent): boolean {\r\n        return false;\r\n    }\r\n}\r\n","export class ColorEntry {\r\n    public constructor(public name: string, public r: number, public g: number, public b: number) {\r\n    }\r\n\r\n    public static findByName(name: string): ColorEntry {\r\n        for (const colorValue of this.list) {\r\n            if (name == colorValue.name) {\r\n                return colorValue;\r\n            }\r\n        }\r\n        return this.list[0];\r\n    }\r\n\r\n    public static list = [\r\n        new ColorEntry(\"red\", 255, 0, 0),\r\n        new ColorEntry(\"green\", 0, 255, 0),\r\n        new ColorEntry(\"blue\", 0, 0, 255),\r\n        new ColorEntry(\"cyan\", 0, 255, 255),\r\n        new ColorEntry(\"purple\", 255, 0, 255),\r\n        new ColorEntry(\"yellow\", 255, 255, 0),\r\n        new ColorEntry(\"gray\", 127, 127, 127),\r\n        new ColorEntry(\"white\", 255, 255, 255),\r\n    ];\r\n}\r\n\r\nexport class AlphaEntry {\r\n    public constructor(public name: string, public buttonColor: string, public value: number) {\r\n    }\r\n\r\n    public static findByName(name: string): AlphaEntry {\r\n        for (const alphaValue of this.list) {\r\n            if (name == alphaValue.name) {\r\n                return alphaValue;\r\n            }\r\n        }\r\n        return this.list[0];\r\n    }\r\n    public static findByValue(value: number): AlphaEntry {\r\n        for (const alphaValue of this.list) {\r\n            if (value == alphaValue.value) {\r\n                return alphaValue;\r\n            }\r\n        }\r\n        return this.list[0];\r\n    }\r\n\r\n    public static list = [\r\n        new AlphaEntry(\"25\", \"rgb(191,191,191)\", 0.25),\r\n        new AlphaEntry(\"50\", \"rgb(127,127,127)\", 0.50),\r\n        new AlphaEntry(\"75\", \"rgb(63,63,63)\", 0.75),\r\n        new AlphaEntry(\"100\", \"rgb(0,0,0)\", 1.00),\r\n    ];\r\n}\r\n\r\nexport function combineColorAlpha(color: ColorEntry, alpha: AlphaEntry): string {\r\n    return \"rgba(\" + color.r + \",\" + color.g + \",\" + color.b + \",\" + alpha.value + \")\";\r\n}\r\n","import {AlphaEntry, ColorEntry} from \"./Color\";\r\n\r\nexport class Ui {\r\n\r\n    static copyToClipboard(inputId: string) {\r\n        let input = document.getElementById(inputId) as HTMLInputElement;\r\n        input.select();\r\n        document.execCommand(\"Copy\");\r\n        input.blur();\r\n    }\r\n\r\n    static setContent(id: string, content: string) {\r\n        let element = document.getElementById(id);\r\n        element.innerHTML = content;\r\n    }\r\n\r\n    static bindButtonOnClick(id: string, onclick: () => void) {\r\n        let button: HTMLButtonElement = <HTMLButtonElement>document.getElementById(id);\r\n        button.onclick = onclick;\r\n    }\r\n\r\n    static setVisibility(id: string, visible: boolean) {\r\n        let element: HTMLElement = document.getElementById(id);\r\n        element.style.display = visible ? \"block\" : \"none\";\r\n    }\r\n\r\n    static bindCheckbox(id: string, initialValue: boolean, onchange: (newValue: boolean) => void) {\r\n        let checkbox = <HTMLInputElement>document.getElementById(id);\r\n        checkbox.checked = initialValue;\r\n        checkbox.onchange = ev => {\r\n            onchange(checkbox.checked);\r\n        };\r\n    }\r\n\r\n    static bindSelect(id: string, options: string[], initialValue: string, onchange: (index:number, newValue: string) => void) {\r\n        let select = <HTMLSelectElement>document.getElementById(id);\r\n        select.options.length = 0;\r\n        for (let map of options) {\r\n            select.add(new Option(map, map));\r\n        }\r\n\r\n        let index = options.indexOf(initialValue);\r\n        if (index > 0) {\r\n            select.options[index].selected = true;\r\n        }\r\n        select.onchange = ev => {\r\n            onchange(select.selectedIndex, select.options[select.selectedIndex].value);\r\n        };\r\n    }\r\n\r\n    static bindValue(id: string, initialValue: string, onchange: (newValue: string) => void) {\r\n        let element = <HTMLInputElement>document.getElementById(id);\r\n        element.value = initialValue;\r\n        element.oninput = element.onchange = ev => {\r\n            onchange(element.value);\r\n        };\r\n    }\r\n\r\n    static bindColor(colorContainerId: string, alphaContainerId: string, initialColor: ColorEntry, initialAlpha: AlphaEntry, onchange: (newColor: ColorEntry, newAlpha: AlphaEntry) => void) {\r\n        let colorContainer = <HTMLInputElement>document.getElementById(colorContainerId);\r\n        let alphaContainer = <HTMLInputElement>document.getElementById(alphaContainerId);\r\n        colorContainer.innerHTML = \"\";\r\n        alphaContainer.innerHTML = \"\";\r\n\r\n        let thisColor = initialColor;\r\n        let thisAlpha = initialAlpha;\r\n\r\n        for (const colorValue of ColorEntry.list) {\r\n            let id = colorContainerId + \"_\" + colorValue.name;\r\n            let style = \"background:\" + colorValue.name;\r\n            colorContainer.innerHTML = colorContainer.innerHTML + \"<button id=\\\"\" + id + \"\\\" class=\\\"configColorButton\\\" style=\\\"\" + style + \"\\\"></button>\\n\";\r\n        }\r\n        for (const alphaValue of AlphaEntry.list) {\r\n            let id = alphaContainerId + \"_\" + alphaValue.name;\r\n            let style = \"background:\" + alphaValue.buttonColor;\r\n            alphaContainer.innerHTML = alphaContainer.innerHTML + \"<button id=\\\"\" + id + \"\\\" class=\\\"configAlphaButton\\\" style=\\\"\" + style + \"\\\"></button>\\n\";\r\n        }\r\n\r\n        for (const colorValue of ColorEntry.list) {\r\n            let id = colorContainerId + \"_\" + colorValue.name;\r\n            let button: HTMLButtonElement = <HTMLButtonElement>document.getElementById(id);\r\n            button.onclick = ev => {\r\n                thisColor = colorValue;\r\n                onchange(thisColor, thisAlpha);\r\n            };\r\n        }\r\n        for (const alphaValue of AlphaEntry.list) {\r\n            let id = alphaContainerId + \"_\" + alphaValue.name;\r\n            let button: HTMLButtonElement = <HTMLButtonElement>document.getElementById(id);\r\n            button.onclick = ev => {\r\n                thisAlpha = alphaValue;\r\n                onchange(thisColor, thisAlpha);\r\n            };\r\n        }\r\n    }\r\n\r\n    static bindNumber(id: string, initialValue: number, onchange: (newValue: number) => void) {\r\n        let input = <HTMLInputElement>document.getElementById(id);\r\n        input.value = initialValue.toString();\r\n        input.oninput = input.onchange = ev => {\r\n            let result = parseFloat(input.value);\r\n            if (result >= 0) {\r\n                onchange(result);\r\n            } else {\r\n                input.value = \"0\";\r\n                onchange(0);\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n","import {Layer} from \"../Layer\";\r\nimport {Camera} from \"../Camera\";\r\nimport {Canvas} from \"../Canvas\";\r\nimport {Map} from \"../data/Map\";\r\nimport {Renderer} from \"../Renderer\";\r\nimport {DrawableImage} from \"../drawable/DrawableImage\";\r\nimport {MouseListener} from \"../MouseListener\";\r\nimport {Ui} from \"../util/Ui\";\r\n\r\nexport class LayerImage extends Layer {\r\n    private map: Map;\r\n    private maxLevel: number;\r\n    private baseFolder: string;\r\n\r\n    public constructor(canvas: Canvas) {\r\n        super(\"image\", canvas);\r\n    }\r\n\r\n    public loadMap(map: Map): void {\r\n        this.map = map;\r\n        this.maxLevel = map.maxLevel;\r\n\r\n        let split = map.githubRepo.indexOf('/');\r\n        let username = map.githubRepo.substring(0,split);\r\n        let repo = map.githubRepo.substring(split+1);\r\n        this.baseFolder = `https://${username}.github.io/${repo}/` + this.map.name;\r\n        this.currentZoom = -1;\r\n\r\n        let imageSource = document.getElementById(\"imageSource\") as HTMLLinkElement;\r\n        Ui.setVisibility(\"imageSource\", !!map.source);\r\n        if (map.source) {\r\n            imageSource.href = map.source;\r\n            imageSource.innerHTML = map.source;\r\n        }\r\n\r\n        let self = this;\r\n        this._mouseListener = new class extends MouseListener {\r\n            private down = false;\r\n            private lastX = -1;\r\n            private lastY = -1;\r\n            onwheel(event: WheelEvent): boolean {\r\n                let camera = self.canvas.getCamera();\r\n                camera.action();\r\n                let point1 = camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                camera.changeZoomBy(event.deltaY > 0 ? 1 : -1);\r\n                camera.action();\r\n                let point2 = camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                let dx = point1.x - point2.x;\r\n                let dy = point1.y - point2.y;\r\n                camera.moveXy(dx, dy);\r\n                self.canvas.requestRender();\r\n                return true;\r\n            }\r\n            onmousedown(event: MouseEvent): boolean {\r\n                this.down = true;\r\n                this.lastX = event.offsetX;\r\n                this.lastY = event.offsetY;\r\n                return true;\r\n            }\r\n            onmouseup(event: MouseEvent): boolean {\r\n                this.down = false;\r\n                return true;\r\n            }\r\n            onmousemove(event: MouseEvent): boolean {\r\n                if (this.down && event.buttons > 0) {\r\n                    let camera = self.canvas.getCamera();\r\n                    camera.action();\r\n                    let point1 = camera.screenXyToCanvas(this.lastX, this.lastY);\r\n                    let point2 = camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    let dx = point1.x - point2.x;\r\n                    let dy = point1.y - point2.y;\r\n                    camera.moveXy(dx, dy);\r\n                    this.lastX = event.offsetX;\r\n                    this.lastY = event.offsetY;\r\n                    self.canvas.requestRender();\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    private currentZoom: number;\r\n    private xCount: number;\r\n    private yCount: number;\r\n    private imageMatrix: DrawableImage[][];\r\n\r\n    private prepare(camera: Camera, canvas: Canvas) {\r\n        let zoom = camera.getZoom();\r\n\r\n        if (this.currentZoom === zoom) return;\r\n        this.currentZoom = zoom;\r\n\r\n        let targetSize = this.map.tileSize << zoom;\r\n\r\n        let levelData = this.map.levels[zoom];\r\n        this.xCount = levelData.xMax;\r\n        this.yCount = levelData.yMax;\r\n        this.imageMatrix = [];\r\n        for (let i = 0; i < this.xCount; i++) {\r\n            this.imageMatrix[i] = [];\r\n            for (let j = 0; j < this.yCount; j++) {\r\n                this.imageMatrix[i][j] = new DrawableImage(\r\n                    this.baseFolder + \"/\" + zoom + \"/\" + i + \"_\" + j + \".jpg\",\r\n                    i * targetSize, j * targetSize,\r\n                    targetSize, targetSize,\r\n                    image => {\r\n                        canvas.requestRender();\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    public render(renderer: Renderer): void {\r\n        this.prepare(this.camera, this.canvas);\r\n\r\n        if (this.imageMatrix) {\r\n            for (let i = 0; i < this.xCount; i++) {\r\n                for (let j = 0; j < this.yCount; j++) {\r\n                    this.imageMatrix[i][j].render(this.canvas, renderer, this.camera);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public unload(): void {\r\n        super.unload();\r\n    }\r\n}\r\n","export class AABB {\r\n    public x1: number;\r\n    public y1: number;\r\n    public x2: number;\r\n    public y2: number;\r\n\r\n    public constructor(x1: number = Math.min(), y1: number = Math.min(), x2: number = Math.max(), y2: number = Math.max()) {\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n    }\r\n    public set(x1: number, y1: number, x2: number, y2: number) {\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n    }\r\n}\r\n","import {Drawable} from \"./Drawable\";\r\nimport {Canvas} from \"../Canvas\";\r\nimport {Renderer} from \"../Renderer\";\r\nimport {Camera} from \"../Camera\";\r\nimport {Size} from \"../util/Size\";\r\nimport {AlphaEntry, ColorEntry, combineColorAlpha} from \"../util/Color\";\r\nimport {AABB} from \"../util/AABB\";\r\n\r\nexport class Point {\r\n    public constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    public x: number;\r\n    public y: number;\r\n}\r\n\r\nexport class PointSegmentResult {\r\n    constructor(position: Point, p1Index: number, p2Index: number, distance: number) {\r\n        this.position = position;\r\n        this.p1Index = p1Index;\r\n        this.p2Index = p2Index;\r\n        this.distance = distance;\r\n    }\r\n    position: Point;\r\n    p1Index: number;\r\n    p2Index: number;\r\n    distance: number;\r\n}\r\n\r\nexport class DrawablePolylinePack {\r\n    public constructor(points: Point[], closed: boolean, lineWidth: Size,\r\n                       fill: boolean, fillColorName: string, fillAlphaName: string,\r\n                       stroke: boolean, strokeColorName: string, strokeAlphaName: string) {\r\n        this.points = points;\r\n        this.closed = closed;\r\n        this.lineWidth = lineWidth;\r\n\r\n        this.fill = fill;\r\n        this.fillColorName = fillColorName;\r\n        this.fillAlphaName = fillAlphaName;\r\n\r\n        this.stroke = stroke;\r\n        this.strokeColorName = strokeColorName;\r\n        this.strokeAlphaName = strokeAlphaName;\r\n    }\r\n\r\n    points: Point[];\r\n    closed: boolean;\r\n    lineWidth: Size;\r\n\r\n    fill: boolean;\r\n    fillColorName: string;\r\n    fillAlphaName: string;\r\n\r\n    stroke: boolean;\r\n    strokeColorName: string;\r\n    strokeAlphaName: string;\r\n}\r\n\r\nexport class DrawablePolylinePicker {\r\n    private polyline: DrawablePolyline;\r\n    private readonly points: Point[];\r\n    public constructor(polyline: DrawablePolyline, points: Point[]) {\r\n        this.polyline = polyline;\r\n        this.points = points;\r\n    }\r\n    private static sqr(dx: number, dy: number) {\r\n        return dx * dx + dy * dy;\r\n    }\r\n    private static testPointSegment(points: Point[], i1: number, i2: number, x: number, y: number): PointSegmentResult {\r\n        let p1 = points[i1];\r\n        let p2 = points[i2];\r\n        let dx = p2.x - p1.x;\r\n        let dy = p2.y - p1.y;\r\n        let dd = DrawablePolylinePicker.sqr(dx, dy);\r\n        if (dd < 0.0001) return null;\r\n\r\n        let scalar = ((x - p1.x) * dx + (y - p1.y) * dy) / dd;\r\n        if (scalar > 1) scalar = 1;\r\n        if (scalar < 0) scalar = 0;\r\n\r\n        let tx = p1.x + scalar * dx;\r\n        let ty = p1.y + scalar * dy;\r\n\r\n        let distance2 = DrawablePolylinePicker.sqr(x - tx, y - ty);\r\n        return new PointSegmentResult(new Point(tx, ty), i1, i2, Math.sqrt(distance2));\r\n    }\r\n    private static testPointPolygon(points: Point[], x: number, y: number): boolean {\r\n        let length = points.length;\r\n        let r: boolean = false;\r\n        for (let i = 0, j = length - 1; i < length; j = i++) {\r\n            if (((points[i].y > y) != (points[j].y > y)) &&\r\n                (x < (points[j].x - points[i].x) * (y - points[i].y) / (points[j].y - points[i].y) + points[i].x))\r\n                r = !r;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    public pickPoint(canvasX: number, canvasY: number, radius: number): number {\r\n        let radius2 = radius * radius;\r\n        let points = this.points;\r\n        for (const point of points) {\r\n            if (DrawablePolylinePicker.sqr(point.x - canvasX, point.y - canvasY) <= radius2) {\r\n                return points.indexOf(point);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    public pickLine(canvasX: number, canvasY: number, radius: number): PointSegmentResult {\r\n        let minResult: PointSegmentResult = null;\r\n        let minDistance: number = Number.MAX_VALUE;\r\n\r\n        let points = this.points;\r\n        let length = points.length;\r\n        for (let i = 0, j = length - 1; i < length; j = i++) {\r\n            let result = DrawablePolylinePicker.testPointSegment(points, i, j, canvasX, canvasY);\r\n            if (result && result.distance < radius) {\r\n                if (result.distance < minDistance) {\r\n                    minDistance = result.distance;\r\n                    minResult = result;\r\n                }\r\n            }\r\n        }\r\n        return minResult;\r\n    }\r\n    public pickShape(canvasX: number, canvasY: number): boolean {\r\n        return this.polyline.style.fill && DrawablePolylinePicker.testPointPolygon(this.points, canvasX, canvasY);\r\n    }\r\n}\r\n\r\nexport class DrawablePolylineEditor {\r\n    private polyline: DrawablePolyline;\r\n    private readonly points: Point[];\r\n    public constructor(polyline: DrawablePolyline, points: Point[]) {\r\n        this.polyline = polyline;\r\n        this.points = points;\r\n    }\r\n\r\n    public forEachPoint(func: ((x: number, y: number, index: number) => void)) {\r\n        this.points.forEach((point, index) => {\r\n            func(point.x, point.y, index);\r\n        });\r\n    }\r\n\r\n    public pointCount(): number {\r\n        return this.points.length;\r\n    }\r\n    public getPoint(index: number): Point {\r\n        let points = this.points;\r\n        index = (index + points.length) % points.length;\r\n        return points[index];\r\n    }\r\n    public addPoint(x: number, y: number) {\r\n        this.points.push(new Point(x, y));\r\n        this.polyline.invalidate();\r\n    }\r\n    public insertPoint(x: number, y: number, beforeIndex: number = -1) {\r\n        let points = this.points;\r\n        beforeIndex = (beforeIndex + points.length) % points.length;\r\n        points.splice(beforeIndex, 0, new Point(x, y));\r\n        this.polyline.invalidate();\r\n    }\r\n    public removePoint(index: number) {\r\n        let points = this.points;\r\n        index = (index + points.length) % points.length;\r\n        points.splice(index, 1);\r\n        this.polyline.invalidate();\r\n    }\r\n    public setPoint(index: number, x: number, y: number) {\r\n        let points = this.points;\r\n        index = (index + points.length) % points.length;\r\n        let point = points[index];\r\n        point.x = x;\r\n        point.y = y;\r\n        this.polyline.invalidate();\r\n    }\r\n    public move(offsetX: number, offsetY: number) {\r\n        for (const point of this.points) {\r\n            point.x += offsetX;\r\n            point.y += offsetY;\r\n        }\r\n        this.polyline.invalidate();\r\n    }\r\n    public flipX() {\r\n        let minX = Math.min();\r\n        let maxX = Math.max();\r\n        for (const point of this.points) {\r\n            minX = Math.min(minX, point.x);\r\n            maxX = Math.max(maxX, point.x);\r\n        }\r\n        let xx = minX + maxX;\r\n        for (const point of this.points) {\r\n            point.x = xx - point.x;\r\n        }\r\n    }\r\n    public flipY() {\r\n        let minY = Math.min();\r\n        let maxY = Math.max();\r\n        for (const point of this.points) {\r\n            minY = Math.min(minY, point.y);\r\n            maxY = Math.max(maxY, point.y);\r\n        }\r\n        let yy = minY + maxY;\r\n        for (const point of this.points) {\r\n            point.y = yy - point.y;\r\n        }\r\n    }\r\n    public rotateCW() {\r\n        let center = this.polyline.calculator.aabbCenter();\r\n        for (const point of this.points) {\r\n            let dx = point.x - center.x;\r\n            let dy = point.y - center.y;\r\n            point.x = center.x - dy;\r\n            point.y = center.y + dx;\r\n        }\r\n    }\r\n    public rotateCCW() {\r\n        let center = this.polyline.calculator.aabbCenter();\r\n        for (const point of this.points) {\r\n            let dx = point.x - center.x;\r\n            let dy = point.y - center.y;\r\n            point.x = center.x + dy;\r\n            point.y = center.y - dx;\r\n        }\r\n    }\r\n}\r\n\r\nexport class DrawablePolylineCalculator {\r\n    private polyline: DrawablePolyline;\r\n    private readonly points: Point[];\r\n    public constructor(polyline: DrawablePolyline, points: Point[]) {\r\n        this.polyline = polyline;\r\n        this.points = points;\r\n    }\r\n\r\n    public centroid(): Point {\r\n        let area2 = 0;\r\n        let accX = 0;\r\n        let accY = 0;\r\n        for (let i = 0; i < this.points.length; i++) {\r\n            let p1 = this.points[i];\r\n            let p2 = this.points[(i + 1) % this.points.length];\r\n            let c = p1.x * p2.y - p2.x * p1.y;\r\n            area2 += c;\r\n            accX += (p1.x + p2.x) * c;\r\n            accY += (p1.y + p2.y) * c;\r\n        }\r\n        let x = accX / 6 / (area2 / 2);\r\n        let y = accY / 6 / (area2 / 2);\r\n        return new Point(x, y);\r\n    }\r\n\r\n    public aabb(aabb: AABB = new AABB()): AABB {\r\n        if (!aabb) aabb = new AABB();\r\n        let minX = Math.min(), maxX = Math.max();\r\n        let minY = Math.min(), maxY = Math.max();\r\n        for (const point of this.points) {\r\n            minX = Math.min(minX, point.x);\r\n            maxX = Math.max(maxX, point.x);\r\n            minY = Math.min(minY, point.y);\r\n            maxY = Math.max(maxY, point.y);\r\n        }\r\n        aabb.set(minX, minY, maxX, maxY);\r\n        return aabb;\r\n    }\r\n    public aabbCenter(): Point {\r\n        let aabb = this.aabb();\r\n        let center = new Point((aabb.x1 + aabb.x2) / 2, (aabb.y1 + aabb.y2) / 2);\r\n        return center;\r\n    }\r\n\r\n    public area(): number {\r\n        if (this.points.length < 3) return 0;\r\n        let s = this.points[0].y * (this.points[this.points.length - 1].x - this.points[1].x);\r\n        for (let i = 1; i < this.points.length; i++) {\r\n            s += this.points[i].y * (this.points[i - 1].x - this.points[(i + 1) % this.points.length].x);\r\n        }\r\n        return Math.abs(s * 0.5);\r\n    }\r\n    public length(): number {\r\n        if (this.points.length < 2) return 0;\r\n\r\n        let s = 0;\r\n        let p0 = this.points[0];\r\n        let pn = this.points[this.points.length - 1];\r\n        if (this.polyline.style.closed) {\r\n            s = DrawablePolylineCalculator.hypot(p0.x - pn.x, p0.y - pn.y);\r\n        }\r\n        for (let i = 0; i < this.points.length - 1; i++) {\r\n            let pi = this.points[i];\r\n            let pj = this.points[i + 1];\r\n            s += DrawablePolylineCalculator.hypot(pi.x - pj.x, pi.y - pj.y);\r\n        }\r\n        return s;\r\n    }\r\n\r\n    private static hypot(x: number, y: number): number {\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    public alignPoint(index: number, radius: number): Point {\r\n        index = (index + this.points.length) % this.points.length;\r\n        let xy = this.points[index];\r\n        let newX = xy.x;\r\n        let newY = xy.y;\r\n        let first = this.points[(index + 1) % this.points.length];\r\n        if (Math.abs(first.x - xy.x) <= radius) newX = first.x;\r\n        if (Math.abs(first.y - xy.y) <= radius) newY = first.y;\r\n        if (this.points.length > 2) {\r\n            let last = this.points[(index - 1 + this.points.length) % this.points.length];\r\n            if (Math.abs(last.x - xy.x) <= radius) newX = last.x;\r\n            if (Math.abs(last.y - xy.y) <= radius) newY = last.y;\r\n        }\r\n        return new Point(newX, newY);\r\n    }\r\n}\r\n\r\nexport class DrawablePolylineStyle {\r\n    public constructor(pack: DrawablePolylinePack) {\r\n        this._closed = pack.closed;\r\n        this._lineWidth = pack.lineWidth;\r\n\r\n        this._fill = pack.fill;\r\n        this._fillColor = ColorEntry.findByName(pack.fillColorName);\r\n        this._fillAlpha = AlphaEntry.findByName(pack.fillAlphaName);\r\n        this._fillString = combineColorAlpha(this._fillColor, this._fillAlpha);\r\n\r\n        this._stroke = pack.stroke;\r\n        this._strokeColor = ColorEntry.findByName(pack.strokeColorName);\r\n        this._strokeAlpha = AlphaEntry.findByName(pack.strokeAlphaName);\r\n        this._strokeString = combineColorAlpha(this._strokeColor, this._strokeAlpha);\r\n    }\r\n    protected _closed: boolean;\r\n    protected _lineWidth: Size;\r\n\r\n    protected _fill: boolean;\r\n    protected _fillColor: ColorEntry;\r\n    protected _fillAlpha: AlphaEntry;\r\n    protected _fillString: string;\r\n\r\n    protected _stroke: boolean;\r\n    protected _strokeColor: ColorEntry;\r\n    protected _strokeAlpha: AlphaEntry;\r\n    protected _strokeString: string;\r\n\r\n    get closed(): boolean {\r\n        return this._closed;\r\n    }\r\n    get lineWidth(): Size {\r\n        return this._lineWidth;\r\n    }\r\n\r\n    get fill(): boolean {\r\n        return this._fill;\r\n    }\r\n    get fillColor(): ColorEntry {\r\n        return this._fillColor;\r\n    }\r\n    get fillAlpha(): AlphaEntry {\r\n        return this._fillAlpha;\r\n    }\r\n    get fillString(): string {\r\n        return this._fillString;\r\n    }\r\n\r\n    get stroke(): boolean {\r\n        return this._stroke;\r\n    }\r\n    get strokeColor(): ColorEntry {\r\n        return this._strokeColor;\r\n    }\r\n    get strokeAlpha(): AlphaEntry {\r\n        return this._strokeAlpha;\r\n    }\r\n    get strokeString(): string {\r\n        return this._strokeString;\r\n    }\r\n\r\n    get onScreen(): number {\r\n        return this._lineWidth.onScreen;\r\n    }\r\n    get onCanvas(): number {\r\n        return this._lineWidth.onCanvas;\r\n    }\r\n    get ofScreen(): number {\r\n        return this._lineWidth.ofScreen;\r\n    }\r\n\r\n    public pack(): DrawablePolylinePack {\r\n        return new DrawablePolylinePack(\r\n            null,\r\n            this._closed,\r\n            this._lineWidth,\r\n\r\n            this._fill,\r\n            this._fillColor.name,\r\n            this._fillAlpha.name,\r\n\r\n            this._stroke,\r\n            this._strokeColor.name,\r\n            this._strokeAlpha.name,\r\n        )\r\n    }\r\n\r\n    set closed(value: boolean) {\r\n        this._closed = value;\r\n    }\r\n    set fill(value: boolean) {\r\n        this._fill = value;\r\n    }\r\n    set stroke(value: boolean) {\r\n        this._stroke = value;\r\n    }\r\n\r\n    set onScreen(onScreen: number) {\r\n        this._lineWidth.onScreen = onScreen;\r\n    }\r\n    set onCanvas(onCanvas: number) {\r\n        this._lineWidth.onCanvas = onCanvas;\r\n    }\r\n    set ofScreen(ofScreen: number) {\r\n        this._lineWidth.ofScreen = ofScreen;\r\n    }\r\n\r\n    public setFillColor(fillColor: ColorEntry, fillAlpha: AlphaEntry) {\r\n        this._fillColor = fillColor;\r\n        this._fillAlpha = fillAlpha;\r\n        this._fillString = combineColorAlpha(this._fillColor, this._fillAlpha);\r\n    }\r\n    public setStrokeColor(strokeColor: ColorEntry, strokeAlpha: AlphaEntry) {\r\n        this._strokeColor = strokeColor;\r\n        this._strokeAlpha = strokeAlpha;\r\n        this._strokeString = combineColorAlpha(this._strokeColor, this._strokeAlpha);\r\n    }\r\n}\r\n\r\nexport class DrawablePolyline extends Drawable {\r\n    public static readonly typeName = \"DrawablePolyline\";\r\n    private readonly points: Point[];\r\n\r\n    public constructor(pack: DrawablePolylinePack) {\r\n        super();\r\n        this.points = pack.points;\r\n        this.style = new DrawablePolylineStyle(pack);\r\n        this.picker = new DrawablePolylinePicker(this, this.points);\r\n        this.editor = new DrawablePolylineEditor(this, this.points);\r\n        this.calculator = new DrawablePolylineCalculator(this, this.points);\r\n    }\r\n\r\n    public readonly style: DrawablePolylineStyle;\r\n    public readonly picker: DrawablePolylinePicker;\r\n    public readonly editor: DrawablePolylineEditor;\r\n    public readonly calculator: DrawablePolylineCalculator;\r\n\r\n    public clone(offsetX: number = 0, offsetY: number = 0): DrawablePolylinePack {\r\n        let points = [];\r\n        for (const point of this.points) {\r\n            points.push(new Point(point.x + offsetX, point.y + offsetY));\r\n        }\r\n        let pack = this.style.pack();\r\n        pack.points = points;\r\n        return pack;\r\n    }\r\n    public pack() : DrawablePolylinePack {\r\n        let pack = this.style.pack();\r\n        pack.points = this.points;\r\n        return pack;\r\n    }\r\n\r\n    public invalidate() {\r\n        this.valid = false;\r\n    }\r\n    private canvasAABB: AABB = new AABB();\r\n    private valid: boolean = false;\r\n    private validate() {\r\n        if (!this.valid) {\r\n            this.calculator.aabb(this.canvasAABB);\r\n        }\r\n    }\r\n\r\n    public render(canvas: Canvas, renderer: Renderer, camera: Camera): void {\r\n        this.validate();\r\n        let inScreen = camera.canvasAABBInScreen(this.canvasAABB);\r\n        if (inScreen) {\r\n            renderer.setFillColor(this.style.fillString);\r\n            renderer.setStrokeColor(this.style.strokeString);\r\n            renderer.renderPolyline(camera, this.points, this.style.closed, this.style.fill, this.style.stroke, this.style.lineWidth);\r\n        }\r\n    }\r\n\r\n}\r\n","import {Drawable} from \"../drawable/Drawable\";\r\n\r\nexport class Selection {\r\n\r\n    private static listDeselect: (() => void)[] = [];\r\n    private static mapSelect: { [key: string]: (item: Drawable) => void } = {};\r\n    private static mapDeselect: { [key: string]: () => void } = {};\r\n\r\n    public static register(typeName: string, onselect: (item: Drawable) => void, ondeselect: () => void) {\r\n        if (typeName) {\r\n            if (onselect) this.mapSelect[typeName] = onselect;\r\n            if (ondeselect) this.mapDeselect[typeName] = ondeselect;\r\n        }\r\n        this.listDeselect.push(ondeselect);\r\n    }\r\n\r\n    public static deselectAll() {\r\n        for (const ondeselect of this.listDeselect) {\r\n            ondeselect();\r\n        }\r\n    }\r\n\r\n    public static deselect(typeName: string) {\r\n        let ondeselect = this.mapDeselect[typeName];\r\n        if (ondeselect) {\r\n            ondeselect();\r\n        }\r\n    }\r\n    public static select(typeName: string, item: Drawable) {\r\n        this.deselectAll();\r\n        let onselect = this.mapSelect[typeName];\r\n        if (onselect) {\r\n            onselect(item);\r\n        }\r\n    }\r\n\r\n}","import {Layer} from \"../Layer\";\r\nimport {Canvas} from \"../Canvas\";\r\nimport {Renderer} from \"../Renderer\";\r\nimport {DrawablePolyline} from \"../drawable/DrawablePolyline\";\r\nimport {MouseListener} from \"../MouseListener\";\r\nimport {Data} from \"../data/Data\";\r\nimport {Selection} from \"./Selection\";\r\n\r\nexport class LayerPolylineView extends Layer {\r\n    public static readonly layerName = \"polyline view\";\r\n\r\n    private polylines: DrawablePolyline[] = [];\r\n\r\n    public constructor(canvas: Canvas) {\r\n        super(LayerPolylineView.layerName, canvas);\r\n    }\r\n\r\n    public loadData(data: Data): void {\r\n        this.polylines = [];\r\n\r\n        if (data.polylines) {\r\n            for (let pack of data.polylines) {\r\n                this.polylines.push(new DrawablePolyline(pack))\r\n            }\r\n        }\r\n\r\n        //listen to mouse click to select polyline\r\n        let self = this;\r\n        this._mouseListener = new class extends MouseListener {\r\n            private moved = false;\r\n            onmousedown(event: MouseEvent): boolean {\r\n                this.moved = false;\r\n                return false;\r\n            }\r\n            onmouseup(event: MouseEvent): boolean {\r\n                if (event.button == 0 && !this.moved) {\r\n                    let radius = self.camera.screenSizeToCanvas(5);\r\n                    let canvasXY = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    let x = canvasXY.x, y = canvasXY.y;\r\n                    let selected: DrawablePolyline = null;\r\n                    for (let polyline of self.polylines) {\r\n                        let pickPointIndex = polyline.picker.pickPoint(x, y, radius);\r\n                        let pickLine = polyline.picker.pickLine(x, y, radius);\r\n                        let pickShape = polyline.picker.pickShape(x, y);\r\n                        if (pickPointIndex != null || pickLine || pickShape) {\r\n                            selected = polyline;\r\n                        }\r\n                    }\r\n                    if (selected) {\r\n                        Selection.select(DrawablePolyline.typeName, selected);\r\n                        return true;\r\n                    }\r\n                    Selection.deselect(DrawablePolyline.typeName);\r\n                    return false;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n            onmousemove(event: MouseEvent): boolean {\r\n                if ((event.buttons & 1) && (event.movementX != 0 && event.movementY != 0)) {\r\n                    this.moved = true;\r\n                }\r\n                return false;\r\n            }\r\n        };\r\n    }\r\n\r\n    public addPolyline(polyline: DrawablePolyline) {\r\n        this.polylines.push(polyline);\r\n        this.canvas.requestRender();\r\n    }\r\n    public deletePolyline(polyline: DrawablePolyline): boolean {\r\n        let index = this.polylines.indexOf(polyline);\r\n        if (index !== -1) {\r\n            this.polylines.splice(index, 1);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    public containPolyline(polyline: DrawablePolyline): boolean {\r\n        return this.polylines.indexOf(polyline) >= 0;\r\n    }\r\n\r\n    public saveData(data: Data): void {\r\n        data.polylines = [];\r\n        for (const polyline of this.polylines) {\r\n            data.polylines.push(polyline.pack());\r\n        }\r\n    }\r\n\r\n    public render(renderer: Renderer): void {\r\n        super.render(renderer);\r\n        for (const polyline of this.polylines) {\r\n            polyline.render(this.canvas, renderer, this.camera);\r\n        }\r\n    }\r\n\r\n    public unload(): void {\r\n        super.unload();\r\n    }\r\n\r\n}\r\n","export class Size {\r\n    onScreen: number;\r\n    onCanvas: number;\r\n    ofScreen: number;\r\n\r\n    constructor(onScreen: number, onCanvas?: number, ofScreen?: number) {\r\n        this.onScreen = onScreen;\r\n        this.onCanvas = onCanvas ? onCanvas : 0;\r\n        this.ofScreen = ofScreen ? ofScreen : 0;\r\n    }\r\n}","import {Layer} from \"../Layer\";\r\nimport {Map} from \"../data/Map\";\r\nimport {DrawablePolyline, DrawablePolylinePack} from \"../drawable/DrawablePolyline\";\r\nimport {Canvas} from \"../Canvas\";\r\nimport {Size} from \"../util/Size\";\r\nimport {MouseListener} from \"../MouseListener\";\r\nimport {Renderer} from \"../Renderer\";\r\nimport {Position} from \"../util/Transform\";\r\nimport {LayerPolylineView} from \"./LayerPolylineView\";\r\nimport {Ui} from \"../util/Ui\";\r\nimport {Data} from \"../data/Data\";\r\nimport {Selection} from \"./Selection\";\r\nimport {Drawable} from \"../drawable/Drawable\";\r\n\r\nexport class LayerPolylineEdit extends Layer {\r\n    public static readonly layerName = \"polyline edit\";\r\n\r\n    private static readonly HINT_ELEMENT_ID = \"polylineHint\";\r\n    private static readonly HINT_NEW_POLYLINE =\r\n        \"1. left click to create point<br>\" +\r\n        \"2. hold left button to preview point<br>\" +\r\n        \"3. right click to finish creating<br>\" +\r\n        \"4. hold ctrl to help with horizontal/vertical line<br>\";\r\n    private static readonly HINT_EDIT_POLYLINE =\r\n        \"1. hold left button to drag points<br>\" +\r\n        \"2. hold ctrl to help with horizontal/vertical line<br>\" +\r\n        \"3. hold alt to drag polyline<br>\" +\r\n        \"4. hold ctrl+alt to copy and drag polyline<br>\" +\r\n        \"5. double click on line to create point<br>\" +\r\n        \"6. right-click / double left-click point to delete it<br>\";\r\n\r\n    private static readonly MAG_RADIUS = 10;\r\n\r\n    private map: Map;\r\n    private polylineNew: DrawablePolyline = null;\r\n    private polylineEdit: DrawablePolyline = null;\r\n    private layerView: LayerPolylineView;\r\n\r\n    public constructor(canvas: Canvas) {\r\n        super(LayerPolylineEdit.layerName, canvas);\r\n        let self = this;\r\n        Selection.register(DrawablePolyline.typeName, (item: Drawable) => {\r\n            this.startEditingPolyline(item as DrawablePolyline);\r\n        }, () => {\r\n            self.finishEditing();\r\n        });\r\n    }\r\n\r\n    public loadMap(map: Map): void {\r\n        this.map = map;\r\n    }\r\n\r\n    public loadData(data: Data): void {\r\n        this.layerView = this.canvas.findLayer(LayerPolylineView.layerName) as LayerPolylineView;\r\n        this.polylineNew = null;\r\n        this.polylineEdit = null;\r\n        this.finishEditing();\r\n        Ui.setVisibility(\"panelPolylineSelected\", false);\r\n    }\r\n\r\n    public startCreatingPolyline(): DrawablePolyline {\r\n        this.finishEditing();\r\n        let self = this;\r\n\r\n        this.polylineNew = new DrawablePolyline(new DrawablePolylinePack(\r\n            [], true, new Size(2),\r\n            true, \"white\", \"25\",\r\n            true, \"white\", \"75\",\r\n        ));\r\n        this.bindPolylineConfigUi(this.polylineNew);\r\n\r\n        Ui.setContent(LayerPolylineEdit.HINT_ELEMENT_ID, LayerPolylineEdit.HINT_NEW_POLYLINE);\r\n\r\n        this._mouseListener = new class extends MouseListener {\r\n            private down: boolean = false;\r\n            private moved: boolean = false;\r\n\r\n            private preview(position: Position, magnetic: boolean): void {\r\n                self.polylineNew.editor.setPoint(-1, position.x, position.y);\r\n                if (magnetic) {\r\n                    let radius = self.camera.screenSizeToCanvas(LayerPolylineEdit.MAG_RADIUS);\r\n                    let result = self.polylineNew.calculator.alignPoint(-1, radius);\r\n                    self.polylineNew.editor.setPoint(-1, result.x, result.y);\r\n                }\r\n            }\r\n            onmousedown(event: MouseEvent): boolean {\r\n                if (event.button == 0 && !this.down) { //left button down => add point\r\n                    this.down = true;\r\n                    let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    self.polylineNew.editor.addPoint(position.x, position.y);\r\n                    self.canvas.requestRender();\r\n                    return true;\r\n                } else if (event.button == 2) {\r\n                    this.moved = false;\r\n                }\r\n                return false;\r\n            }\r\n            onmouseup(event: MouseEvent): boolean {\r\n                if (event.button == 0) { //left button up => update last point\r\n                    this.down = false;\r\n                    let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    this.preview(position, event.ctrlKey);\r\n                    self.canvas.requestRender();\r\n                    return true;\r\n                } else if (event.button == 2) {\r\n                    if (!this.moved) {\r\n                        let newPolyline = self.polylineNew;\r\n                        self.finishEditing();\r\n                        if (self.layerView.containPolyline(newPolyline)) {\r\n                            self.startEditingPolyline(newPolyline);\r\n                        }\r\n                    }\r\n                    this.moved = false;\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            onmousemove(event: MouseEvent): boolean {\r\n                if (this.down) { //left button is down => show modification\r\n                    let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    this.preview(position, event.ctrlKey);\r\n                    self.canvas.requestRender();\r\n                    return true;\r\n                } else if (event.buttons & 2) {\r\n                    this.moved = true;\r\n                }\r\n                return false;\r\n            }\r\n        };\r\n\r\n        return this.polylineNew;\r\n    }\r\n\r\n    public deleteCreating() {\r\n        this.polylineNew = null;\r\n        this.finishEditing();\r\n        this.canvas.requestRender();\r\n    }\r\n\r\n    public startEditingPolyline(polyline: DrawablePolyline): void {\r\n        this.finishEditing();\r\n\r\n        //show polyline and its point indicators\r\n        this.polylineEdit = polyline;\r\n        this.bindPolylineConfigUi(this.polylineEdit);\r\n\r\n        Ui.setContent(LayerPolylineEdit.HINT_ELEMENT_ID, LayerPolylineEdit.HINT_EDIT_POLYLINE);\r\n\r\n        //start listening to mouse events: drag point, remove point on double click, add point on double click\r\n        let self = this;\r\n        this._mouseListener = new class extends MouseListener {\r\n            private down: boolean = false;\r\n            private moved: boolean = false;\r\n\r\n            private dragPointIndex: number = null;\r\n\r\n            private dragShape: boolean = false;\r\n            private dragShapeX: number = -1;\r\n            private dragShapeY: number = -1;\r\n\r\n            onmousedown(event: MouseEvent): boolean {\r\n                this.dragPointIndex = null;\r\n\r\n                if (event.button == 0) { //left button down => test drag point\r\n                    this.down = true;\r\n\r\n                    //test point\r\n                    let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    let pointIndex = polyline.picker.pickPoint(position.x, position.y, self.camera.screenSizeToCanvas(5));\r\n                    if (pointIndex != null) { //start dragging this point\r\n                        this.dragPointIndex = pointIndex;\r\n                        return true;\r\n                    }\r\n\r\n                    let shape = polyline.picker.pickShape(position.x, position.y);\r\n                    if (pointIndex == null && shape && event.altKey) {\r\n                        if (event.ctrlKey) {\r\n                            let copied = new DrawablePolyline(polyline.clone());\r\n                            self.layerView.addPolyline(copied);\r\n                        }\r\n                        this.dragShape = true;\r\n                        this.dragShapeX = position.x;\r\n                        this.dragShapeY = position.y;\r\n                    }\r\n                } else if (event.button == 2) {\r\n                    this.moved = false;\r\n                }\r\n                return false;\r\n            }\r\n            onmouseup(event: MouseEvent): boolean {\r\n                let wasDragging: boolean = this.dragPointIndex != null || !!this.dragShape; //pass event if not dragging, so that LayerPolylineView will deselect this polyline\r\n\r\n                this.dragPointIndex = null;\r\n\r\n                this.dragShape = false;\r\n                this.dragShapeX = -1;\r\n                this.dragShapeY = -1;\r\n\r\n                if (event.button == 0) { //left button up => nothing\r\n                    this.down = false;\r\n                    return wasDragging;\r\n                } else if (event.button == 2) {\r\n                    let hit = false;\r\n                    if (!this.moved) {\r\n                        let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                        //test points\r\n                        let pointIndex = polyline.picker.pickPoint(position.x, position.y, self.camera.screenSizeToCanvas(5));\r\n                        if (pointIndex != null) { //delete point\r\n                            if (polyline.editor.pointCount() > 3) { //so it will be at least a triangle\r\n                                polyline.editor.removePoint(pointIndex);\r\n                                self.canvas.requestRender();\r\n                            }\r\n                            hit = true;\r\n                        }\r\n                    }\r\n                    this.moved = false;\r\n                    return hit;\r\n                }\r\n                return false;\r\n            }\r\n            ondblclick(event: MouseEvent): boolean { //double click => remove point on selection or add point on segment\r\n                if (event.button == 0) {\r\n                    let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n\r\n                    //test points\r\n                    let pointIndex = polyline.picker.pickPoint(position.x, position.y, self.camera.screenSizeToCanvas(5));\r\n                    if (pointIndex != null) { //delete point\r\n                        if (polyline.editor.pointCount() > 3) { //so it will be at least a triangle\r\n                            polyline.editor.removePoint(pointIndex);\r\n                            self.canvas.requestRender();\r\n                        }\r\n                        return true;\r\n                    }\r\n\r\n                    //test segments\r\n                    let segment = polyline.picker.pickLine(position.x, position.y, self.camera.screenSizeToCanvas(5));\r\n                    if (segment) { //add point\r\n                        let newIndex = segment.p1Index; //insert point after p1\r\n                        polyline.editor.insertPoint(segment.position.x, segment.position.y, newIndex);\r\n                        self.canvas.requestRender();\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n            onmousemove(event: MouseEvent): boolean {\r\n                if (this.down) { //left button is down => drag\r\n                    let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n\r\n                    if (this.dragPointIndex != null) {\r\n                        polyline.editor.setPoint(this.dragPointIndex, position.x, position.y);\r\n                        if (event.ctrlKey) {\r\n                            let radius = self.camera.screenSizeToCanvas(LayerPolylineEdit.MAG_RADIUS);\r\n                            let result = polyline.calculator.alignPoint(this.dragPointIndex, radius);\r\n                            polyline.editor.setPoint(this.dragPointIndex, result.x, result.y);\r\n                        }\r\n\r\n                        self.canvas.requestRender();\r\n                        return true;\r\n\r\n                    } else if (this.dragShape) {\r\n                        polyline.editor.move(position.x - this.dragShapeX, position.y - this.dragShapeY);\r\n                        this.dragShapeX = position.x;\r\n                        this.dragShapeY = position.y;\r\n\r\n                        self.canvas.requestRender();\r\n                        return true;\r\n                    }\r\n                } else if(event.buttons & 2) {\r\n                    this.moved = true;\r\n                }\r\n                return false;\r\n            }\r\n        };\r\n\r\n        this.canvas.requestRender();\r\n    }\r\n\r\n    public finishEditing(): void {\r\n        Ui.setVisibility(\"panelPolylineSelected\", false);\r\n\r\n        if (this.polylineNew) {\r\n            if (this.polylineNew.editor.pointCount() > 2) {\r\n                this.layerView.addPolyline(this.polylineNew);\r\n            }\r\n            this.polylineNew = null;\r\n            this.canvas.requestRender();\r\n        }\r\n        if (this.polylineEdit) {\r\n            this.polylineEdit = null;\r\n            this.canvas.requestRender();\r\n        }\r\n        this._mouseListener = null;\r\n    }\r\n\r\n    public render(renderer: Renderer): void {\r\n        if (this.polylineNew) {\r\n            this.polylineNew.render(this.canvas, renderer, this.camera);\r\n            //draw two points\r\n            let pointCount = this.polylineNew.editor.pointCount();\r\n            if (pointCount > 0) {\r\n                let p = this.polylineNew.editor.getPoint(0);\r\n                this.drawPointCircle(p.x, p.y, renderer);\r\n            }\r\n            if (pointCount > 1) {\r\n                let p = this.polylineNew.editor.getPoint(-1);\r\n                this.drawPointCircle(p.x, p.y, renderer);\r\n            }\r\n        }\r\n        if (this.polylineEdit) {\r\n            //draw all points\r\n            this.polylineEdit.editor.forEachPoint((x, y) => {\r\n                this.drawPointCircle(x, y, renderer);\r\n            });\r\n        }\r\n    }\r\n\r\n    private drawPointCircle(x: number, y: number, renderer: Renderer) {\r\n        let position = this.camera.canvasToScreen(x, y);\r\n        renderer.setColor(\"rgba(255,255,255,1)\");\r\n        renderer.drawCircle(position.x, position.y, 5, false, true, 1);\r\n        renderer.setColor(\"rgba(0,0,0,0.5)\");\r\n        renderer.drawCircle(position.x, position.y, 4, true, false);\r\n    }\r\n\r\n    public deleteEditing() {\r\n        if (this.polylineEdit) {\r\n            this.layerView.deletePolyline(this.polylineEdit);\r\n            this.finishEditing();\r\n        }\r\n    }\r\n\r\n    private bindPolylineConfigUi(polyline: DrawablePolyline) {\r\n        Ui.setVisibility(\"panelPolylineSelected\", true);\r\n\r\n        Ui.bindButtonOnClick(\"polylineButtonCopy\", () => {\r\n            let offset = this.canvas.getCamera().screenSizeToCanvas(20);\r\n            let newPolyline = new DrawablePolyline(polyline.clone(offset, offset));\r\n\r\n            this.finishEditing();\r\n            this.layerView.addPolyline(newPolyline);\r\n            this.startEditingPolyline(newPolyline);\r\n\r\n            this.canvas.requestRender();\r\n        });\r\n\r\n        Ui.setVisibility(\"polylineAreaContainer\", this.map.widthMillimeter > 0 && this.map.heightMillimeter > 0);\r\n        Ui.bindButtonOnClick(\"polylineButtonArea\", () => {\r\n            if (this.map.widthMillimeter > 0 && this.map.heightMillimeter > 0) {\r\n                Ui.setContent(\"poylineTextArea\", \"\");\r\n                if (polyline.style.fill) {\r\n                    let area = polyline.calculator.area();\r\n                    let areaMM2 = area / this.map.width / this.map.height * this.map.widthMillimeter * this.map.heightMillimeter;\r\n                    areaMM2 = Math.round(areaMM2 * 100) / 100;\r\n                    Ui.setContent(\"poylineTextArea\", areaMM2 + \"mm^2\");\r\n                } else {\r\n                    let length = polyline.calculator.length();\r\n                    let lengthMM = length * Math.sqrt(this.map.widthMillimeter * this.map.heightMillimeter / this.map.width / this.map.height);\r\n                    lengthMM = Math.round(lengthMM * 100) / 100;\r\n                    Ui.setContent(\"poylineTextArea\", lengthMM + \"mm\");\r\n                }\r\n            }\r\n        });\r\n        Ui.setContent(\"poylineTextArea\", \"\");\r\n\r\n        Ui.bindButtonOnClick(\"polylineButtonRotateCCW\", () => {\r\n            polyline.editor.rotateCCW();\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindButtonOnClick(\"polylineButtonRotateCW\", () => {\r\n            polyline.editor.rotateCW();\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindButtonOnClick(\"polylineButtonFlipX\", () => {\r\n            polyline.editor.flipX();\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindButtonOnClick(\"polylineButtonFlipY\", () => {\r\n            polyline.editor.flipY();\r\n            this.canvas.requestRender();\r\n        });\r\n\r\n\r\n        Ui.bindCheckbox(\"polylineCheckboxFill\", polyline.style.fill, newValue => {\r\n            polyline.style.fill = newValue;\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindCheckbox(\"polylineCheckboxStroke\", polyline.style.stroke, newValue => {\r\n            polyline.style.stroke = newValue;\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindCheckbox(\"polylineCheckboxClosed\", polyline.style.closed, newValue => {\r\n            polyline.style.closed = newValue;\r\n            this.canvas.requestRender();\r\n        });\r\n\r\n        Ui.bindNumber(\"polylineTextSizeOnScreen\", polyline.style.onScreen, newValue => {\r\n            polyline.style.onScreen = newValue;\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindNumber(\"polylineTextSizeOnCanvas\", polyline.style.onCanvas, newValue => {\r\n            polyline.style.onCanvas = newValue;\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindNumber(\"polylineTextSizeOfScreen\", polyline.style.ofScreen * 1000, newValue => {\r\n            polyline.style.ofScreen = newValue * 0.001;\r\n            this.canvas.requestRender();\r\n        });\r\n\r\n        Ui.bindColor(\"polylineContainerStrokeColor\", \"polylineContainerStrokeAlpha\", polyline.style.strokeColor, polyline.style.strokeAlpha, (newColor, newAlpha) => {\r\n            polyline.style.setStrokeColor(newColor, newAlpha);\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindColor(\"polylineContainerFillColor\", \"polylineContainerFillAlpha\", polyline.style.fillColor, polyline.style.fillAlpha, (newColor, newAlpha) => {\r\n            polyline.style.setFillColor(newColor, newAlpha);\r\n            this.canvas.requestRender();\r\n        });\r\n    }\r\n}\r\n","import {Drawable} from \"./Drawable\";\r\nimport {Canvas} from \"../Canvas\";\r\nimport {Renderer} from \"../Renderer\";\r\nimport {Camera} from \"../Camera\";\r\nimport {Size} from \"../util/Size\";\r\nimport {AlphaEntry, ColorEntry, combineColorAlpha} from \"../util/Color\";\r\nimport {AABB} from \"../util/AABB\";\r\n\r\nexport class DrawableTextPack {\r\n    public constructor(text: string, colorName: string, alphaName: string,\r\n                       // anchorX: CanvasTextAlign, anchorY: CanvasTextBaseline,\r\n                       fontSize: Size, x: number, y: number) {\r\n        this.text = text;\r\n        this.colorName = colorName;\r\n        this.alphaName = alphaName;\r\n        this.fontSize = fontSize;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    text: string = \"\";\r\n    colorName: string;\r\n    alphaName: string;\r\n    fontSize: Size;\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class DrawableText extends Drawable {\r\n    public static readonly typeName = \"DrawableText\";\r\n\r\n    private _text: string = \"\";\r\n    private _x: number;\r\n    private _y: number;\r\n\r\n    public color: ColorEntry;\r\n    public alpha: AlphaEntry;\r\n    public colorString: string;\r\n    protected readonly fontSize: Size;\r\n\r\n    public constructor(pack: DrawableTextPack) {\r\n        super();\r\n        this._text = pack.text;\r\n        this.color = ColorEntry.findByName(pack.colorName);\r\n        this.alpha = AlphaEntry.findByName(pack.alphaName);\r\n        this.colorString = combineColorAlpha(this.color, this.alpha);\r\n        this.fontSize = pack.fontSize;\r\n        this._x = pack.x;\r\n        this._y = pack.y;\r\n    }\r\n\r\n    private invalidate() {\r\n        this.sizeValid = false;\r\n    }\r\n    private _canvasAABB: AABB = new AABB();\r\n    private sizeValid: boolean = false;\r\n    private canvasZoom: number = -1;\r\n    private canvasWidth: number = 0;\r\n    private canvasHeight: number = 0;\r\n    private screenWidth: number = 0;\r\n    private screenHeight: number = 0;\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n    public validateCanvasAABB(camera: Camera, renderer: Renderer): AABB {\r\n        this.validate(camera, renderer);\r\n        return this._canvasAABB;\r\n    }\r\n\r\n    get onScreen(): number {\r\n        return this.fontSize.onScreen;\r\n    }\r\n    get onCanvas(): number {\r\n        return this.fontSize.onCanvas;\r\n    }\r\n    get ofScreen(): number {\r\n        return this.fontSize.ofScreen;\r\n    }\r\n    set onScreen(onScreen: number) {\r\n        this.fontSize.onScreen = onScreen;\r\n        this.invalidate();\r\n    }\r\n    set onCanvas(onCanvas: number) {\r\n        this.fontSize.onCanvas = onCanvas;\r\n        this.invalidate();\r\n    }\r\n    set ofScreen(ofScreen: number) {\r\n        this.fontSize.ofScreen = ofScreen;\r\n        this.invalidate();\r\n    }\r\n\r\n    public setPosition(x: number, y: number) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this.invalidate();\r\n    }\r\n    set text(value: string) {\r\n        this._text = value;\r\n        this.invalidate();\r\n    }\r\n\r\n    public setColorAlpha(color: ColorEntry, alpha: AlphaEntry) {\r\n        this.color = color;\r\n        this.alpha = alpha;\r\n        this.colorString = combineColorAlpha(this.color, this.alpha);\r\n    }\r\n\r\n    public clone(offsetX: number, offsetY: number): DrawableTextPack {\r\n        return new DrawableTextPack(\r\n            this._text,\r\n            this.color.name,\r\n            this.alpha.name,\r\n            this.fontSize,\r\n            this._x + offsetX,\r\n            this._y + offsetY,\r\n        )\r\n    }\r\n\r\n    public pack(): DrawableTextPack {\r\n        return new DrawableTextPack(\r\n            this._text,\r\n            this.color.name,\r\n            this.alpha.name,\r\n            this.fontSize,\r\n            this._x,\r\n            this._y,\r\n        )\r\n    }\r\n\r\n    public render(canvas: Canvas, renderer: Renderer, camera: Camera): void {\r\n        renderer.setColor(this.colorString);\r\n        this.validate(camera, renderer);\r\n        let inScreen = camera.canvasAABBInScreen(this._canvasAABB);\r\n        if (inScreen) {\r\n            renderer.renderText(camera, this._text, this.screenHeight, this._x, this._y, \"center\", \"middle\");\r\n        }\r\n    }\r\n\r\n    private validate(camera: Camera, renderer: Renderer) {\r\n        if (!this.sizeValid || this.canvasZoom != camera.getZoom()) {\r\n            this.sizeValid = true;\r\n\r\n            let wh = renderer.measureText(camera, this._text, this.fontSize);\r\n            let ratio = camera.screenSizeToCanvas(1);\r\n            this.canvasZoom = camera.getZoom();\r\n            this.canvasWidth = wh[0] * ratio / 2;\r\n            this.canvasHeight = wh[1] * ratio / 2;\r\n            this.screenWidth = wh[0];\r\n            this.screenHeight = wh[1];\r\n\r\n            this.calcCanvasAABB();\r\n        }\r\n    }\r\n\r\n    public pick(x: number, y: number, radius: number): boolean {\r\n        let h = (this._x - this.canvasWidth - radius <= x) && (x <= this._x + this.canvasWidth + radius);\r\n        let v = (this._y - this.canvasHeight - radius <= y) && (y <= this._y + this.canvasHeight + radius);\r\n        return h && v;\r\n    }\r\n\r\n    private calcCanvasAABB(): AABB {\r\n        this._canvasAABB.x1 = this.x - this.canvasWidth;\r\n        this._canvasAABB.y1 = this.y - this.canvasHeight;\r\n        this._canvasAABB.x2 = this.x + this.canvasWidth;\r\n        this._canvasAABB.y2 = this.y + this.canvasHeight;\r\n        return this._canvasAABB;\r\n    }\r\n}\r\n","import {Layer} from \"../Layer\";\r\nimport {Canvas} from \"../Canvas\";\r\nimport {Renderer} from \"../Renderer\";\r\nimport {MouseListener} from \"../MouseListener\";\r\nimport {DrawableText} from \"../drawable/DrawableText\";\r\nimport {Data} from \"../data/Data\";\r\nimport {Selection} from \"./Selection\";\r\n\r\nexport class LayerTextView extends Layer {\r\n    public static readonly layerName = \"text view\";\r\n\r\n    private texts: DrawableText[] = [];\r\n\r\n    public constructor(canvas: Canvas) {\r\n        super(LayerTextView.layerName, canvas);\r\n    }\r\n\r\n    public loadData(data: Data): void {\r\n        this.texts = [];\r\n\r\n        if (data.texts) {\r\n            for (let pack of data.texts) {\r\n                this.texts.push(new DrawableText(pack))\r\n            }\r\n        }\r\n\r\n        //listen to mouse click to select text\r\n        let self = this;\r\n        this._mouseListener = new class extends MouseListener {\r\n            private moved = false;\r\n            onmousedown(event: MouseEvent): boolean {\r\n                this.moved = false;\r\n                return false;\r\n            }\r\n            onmouseup(event: MouseEvent): boolean {\r\n                if (event.button == 0 && !this.moved) {\r\n                    let canvasXY = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    let x = canvasXY.x, y = canvasXY.y;\r\n                    let selected: DrawableText = null;\r\n                    for (let text of self.texts) {\r\n                        let pick = text.pick(x, y, self.camera.screenSizeToCanvas(5));\r\n                        if (pick) selected = text;\r\n                    }\r\n                    if (selected) {\r\n                        Selection.select(DrawableText.typeName, selected);\r\n                        return true;\r\n                    }\r\n                    Selection.deselect(DrawableText.typeName);\r\n                    return false;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n            onmousemove(event: MouseEvent): boolean {\r\n                if ((event.buttons & 1) && (event.movementX != 0 && event.movementY != 0)) {\r\n                    this.moved = true;\r\n                }\r\n                return false;\r\n            }\r\n        };\r\n    }\r\n\r\n    public addText(text: DrawableText) {\r\n        this.texts.push(text);\r\n        this.canvas.requestRender();\r\n    }\r\n    public deleteText(text: DrawableText): boolean {\r\n        let index = this.texts.indexOf(text);\r\n        if (index !== -1) {\r\n            this.texts.splice(index, 1);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public saveData(data: Data): void {\r\n        data.texts = [];\r\n        for (const text of this.texts) {\r\n            data.texts.push(text.pack());\r\n        }\r\n    }\r\n\r\n    public render(renderer: Renderer): void {\r\n        super.render(renderer);\r\n        for (const text of this.texts) {\r\n            text.render(this.canvas, renderer, this.camera);\r\n        }\r\n    }\r\n\r\n    public unload(): void {\r\n        super.unload();\r\n    }\r\n\r\n}\r\n","import {Layer} from \"../Layer\";\r\nimport {DrawableText, DrawableTextPack} from \"../drawable/DrawableText\";\r\nimport {Canvas} from \"../Canvas\";\r\nimport {Size} from \"../util/Size\";\r\nimport {MouseListener} from \"../MouseListener\";\r\nimport {Renderer} from \"../Renderer\";\r\nimport {LayerTextView} from \"./LayerTextView\";\r\nimport {Ui} from \"../util/Ui\";\r\nimport {Data} from \"../data/Data\";\r\nimport {Selection} from \"./Selection\";\r\nimport {Drawable} from \"../drawable/Drawable\";\r\n\r\nexport class LayerTextEdit extends Layer {\r\n    public static readonly layerName = \"text edit\";\r\n\r\n    private static readonly HINT_ELEMENT_ID = \"textHint\";\r\n    private static readonly HINT_NEW_TEXT =\r\n        \"1. left click to create text<br>\";\r\n    private static readonly HINT_EDIT_TEXT =\r\n        \"1. hold alt to drag<br>\" +\r\n        \"2. hold ctrl+alt to copy and drag <br>\";\r\n\r\n    private textEdit: DrawableText = null;\r\n    private layerView: LayerTextView;\r\n\r\n    public constructor(canvas: Canvas) {\r\n        super(LayerTextEdit.layerName, canvas);\r\n        let self = this;\r\n        Selection.register(DrawableText.typeName, (item: Drawable) => {\r\n            self.startEditingText(item as DrawableText);\r\n        }, () => {\r\n            self.finishEditing();\r\n        });\r\n    }\r\n\r\n    public loadData(data: Data): void {\r\n        this.layerView = this.canvas.findLayer(LayerTextView.layerName) as LayerTextView;\r\n        this.finishEditing();\r\n        Ui.setVisibility(\"panelTextSelected\", false);\r\n    }\r\n\r\n    public startCreatingText() {\r\n        this.finishEditing();\r\n        let self = this;\r\n\r\n        //show text and its point indicators\r\n        let textNew = new DrawableText(new DrawableTextPack(\r\n            \"text\",\r\n            \"white\", \"100\", new Size(20, 50),\r\n            0, 0\r\n        ));\r\n        this.bindTextConfigUi(textNew);\r\n\r\n        Ui.setContent(LayerTextEdit.HINT_ELEMENT_ID, LayerTextEdit.HINT_NEW_TEXT);\r\n\r\n        this._mouseListener = new class extends MouseListener {\r\n            private down: boolean = false;\r\n\r\n            onmousedown(event: MouseEvent): boolean {\r\n                if (event.button == 0) {\r\n                    this.down = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            onmouseup(event: MouseEvent): boolean {\r\n                if (event.button == 0) { //left button up => update last point\r\n                    this.down = false;\r\n                    let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    textNew.setPosition(position.x, position.y);\r\n                    self.layerView.addText(textNew);\r\n                    Selection.select(DrawableText.typeName, textNew);\r\n                    self.canvas.requestRender();\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n            onmousemove(event: MouseEvent): boolean {\r\n                return (event.buttons & 1) && this.down;\r\n\r\n            }\r\n        };\r\n    }\r\n\r\n    public startEditingText(text: DrawableText): void {\r\n        this.finishEditing();\r\n\r\n        //show text and its point indicators\r\n        this.textEdit = text;\r\n        this.bindTextConfigUi(this.textEdit);\r\n\r\n        Ui.setContent(LayerTextEdit.HINT_ELEMENT_ID, LayerTextEdit.HINT_EDIT_TEXT);\r\n\r\n        //start listening to mouse events: drag point, remove point on double click, add point on double click\r\n        let self = this;\r\n        this._mouseListener = new class extends MouseListener {\r\n            private down: boolean = false;\r\n            private drag: boolean = false;\r\n            private dragX: number = 0;\r\n            private dragY: number = 0;\r\n\r\n            onmousedown(event: MouseEvent): boolean {\r\n                if (event.button == 0) { //left button down => test drag point\r\n                    this.down = true;\r\n                    this.drag = false;\r\n\r\n                    //test\r\n                    let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    let pick = text.pick(position.x, position.y, self.camera.screenSizeToCanvas(5));\r\n                    if (pick && event.altKey) { //start dragging\r\n                        if (event.ctrlKey) {\r\n                            let copied = new DrawableText(text.clone(0, 0));\r\n                            self.layerView.addText(copied);\r\n                        }\r\n                        this.drag = true;\r\n                        this.dragX = position.x - text.x;\r\n                        this.dragY = position.y - text.y;\r\n                        return event.altKey;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            onmouseup(event: MouseEvent): boolean {\r\n                let passEvent: boolean = !this.drag; //pass event if not moving point, so that LayerTextView will deselect this text\r\n                this.drag = false;\r\n\r\n                if (event.button == 0) { //left button up => nothing\r\n                    this.down = false;\r\n                    return !passEvent;\r\n                }\r\n                return false;\r\n            }\r\n            onmousemove(event: MouseEvent): boolean {\r\n                if (this.down && this.drag) {\r\n                    let position = self.camera.screenXyToCanvas(event.offsetX, event.offsetY);\r\n                    self.textEdit.setPosition(position.x - this.dragX, position.y - this.dragY);\r\n                    self.canvas.requestRender();\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n        };\r\n\r\n        this.canvas.requestRender();\r\n    }\r\n\r\n    public finishEditing(): void {\r\n        Ui.setVisibility(\"panelTextSelected\", false);\r\n\r\n        if (this.textEdit) {\r\n            if (this.textEdit.text.length == 0) {\r\n                this.layerView.deleteText(this.textEdit);\r\n            }\r\n            this.textEdit = null;\r\n            this.canvas.requestRender();\r\n        }\r\n        this._mouseListener = null;\r\n    }\r\n\r\n    public render(renderer: Renderer): void {\r\n        if (this.textEdit) {\r\n            //draw rect\r\n            renderer.setColor(this.textEdit.colorString);\r\n            let aabb = this.textEdit.validateCanvasAABB(this.camera, renderer);\r\n            let p1 = this.camera.canvasToScreen(aabb.x1, aabb.y1);\r\n            let p2 = this.camera.canvasToScreen(aabb.x2, aabb.y2);\r\n            renderer.drawRect(\r\n                p1.x - 5, p1.y - 5, p2.x + 5, p2.y + 5,\r\n                false, true, 2\r\n            );\r\n        }\r\n    }\r\n\r\n    public deleteEditing() {\r\n        if (this.textEdit) {\r\n            this.layerView.deleteText(this.textEdit);\r\n            this.finishEditing();\r\n        }\r\n    }\r\n\r\n    private bindTextConfigUi(text: DrawableText) {\r\n        Ui.setVisibility(\"panelTextSelected\", true);\r\n\r\n        Ui.bindButtonOnClick(\"textButtonCopy\", () => {\r\n            let offset = this.canvas.getCamera().screenSizeToCanvas(10);\r\n            let newText = new DrawableText(text.clone(offset, offset));\r\n\r\n            this.finishEditing();\r\n            this.layerView.addText(newText);\r\n            this.startEditingText(newText);\r\n\r\n            this.canvas.requestRender();\r\n        });\r\n\r\n        Ui.bindValue(\"textTextContent\", text.text, newValue => {\r\n            text.text = newValue;\r\n            this.canvas.requestRender();\r\n        });\r\n\r\n        Ui.bindNumber(\"textTextSizeOnScreen\", text.onScreen, newValue => {\r\n            text.onScreen = newValue;\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindNumber(\"textTextSizeOnCanvas\", text.onCanvas, newValue => {\r\n            text.onCanvas = newValue;\r\n            this.canvas.requestRender();\r\n        });\r\n        Ui.bindNumber(\"textTextSizeOfScreen\", text.ofScreen * 1000, newValue => {\r\n            text.ofScreen = newValue * 0.001;\r\n            this.canvas.requestRender();\r\n        });\r\n\r\n        Ui.bindColor(\"textContainerColor\", \"textContainerAlpha\", text.color, text.alpha, (newColor, newAlpha) => {\r\n            text.setColorAlpha(newColor, newAlpha);\r\n            this.canvas.requestRender();\r\n        });\r\n    }\r\n}\r\n","import {NetUtil} from \"./NetUtil\";\r\n\r\nexport class Github {\r\n    static getComments(repo: string, issueId: number, callback: (comments: GithubComment[]) => void) {\r\n        NetUtil.get(\"https://api.github.com/repos/\" + repo + \"/issues/\" + issueId + \"/comments\", json => {\r\n            try {\r\n                let array = JSON.parse(json) as GithubComment[];\r\n                callback(array);\r\n            } catch (e) {\r\n            }\r\n        });\r\n    }\r\n\r\n    static getIssueLink(repo: string, issueId: number): string {\r\n        return \"https://github.com/\" + repo + \"/issues/\" + issueId;\r\n    }\r\n    static getCommentLink(repo: string, issueId: number, commentId: number): string {\r\n        return \"https://github.com/\" + repo + \"/issues/\" + issueId + \"#issuecomment-\" + commentId;\r\n    }\r\n}\r\n\r\nexport class GithubUser {\r\n    login: string;\r\n    id: number;\r\n}\r\n\r\nexport class GithubComment {\r\n    user: GithubUser;\r\n    id: number;\r\n    body: string;\r\n}","import {Canvas} from \"./Canvas\";\r\nimport {NetUtil} from \"./util/NetUtil\";\r\nimport {Map} from \"./data/Map\";\r\nimport {LayerImage} from \"./layers/LayerImage\";\r\nimport {LayerPolylineView} from \"./layers/LayerPolylineView\";\r\nimport {LayerPolylineEdit} from \"./layers/LayerPolylineEdit\";\r\nimport {Data} from \"./data/Data\";\r\nimport {Ui} from \"./util/Ui\";\r\nimport {LayerTextEdit} from \"./layers/LayerTextEdit\";\r\nimport {LayerTextView} from \"./layers/LayerTextView\";\r\nimport {Github, GithubComment} from \"./util/GithubUtil\";\r\n\r\nlet canvas = new Canvas(document.getElementById(\"container\"), 'canvas2d');\r\ncanvas.init();\r\n\r\nlet layerImage = new LayerImage(canvas);\r\nlet layerPolylineView = new LayerPolylineView(canvas);\r\nlet layerPolylineEdit = new LayerPolylineEdit(canvas);\r\nlet layerTextView = new LayerTextView(canvas);\r\nlet layerTextEdit = new LayerTextEdit(canvas);\r\n\r\ncanvas.addLayer(layerImage);\r\ncanvas.addLayer(layerPolylineView);\r\ncanvas.addLayer(layerPolylineEdit);\r\ncanvas.addLayer(layerTextView);\r\ncanvas.addLayer(layerTextEdit);\r\n\r\nUi.bindButtonOnClick(\"buttonNewPolyline\", () => {\r\n    layerTextEdit.finishEditing();\r\n    layerPolylineEdit.startCreatingPolyline();\r\n});\r\nUi.bindButtonOnClick(\"polylineButtonDelete\", () => {\r\n    layerPolylineEdit.deleteEditing();\r\n    layerPolylineEdit.deleteCreating();\r\n    layerTextEdit.finishEditing();\r\n    layerPolylineEdit.finishEditing();\r\n});\r\nUi.bindButtonOnClick(\"buttonNewText\", () => {\r\n    layerPolylineEdit.finishEditing();\r\n    layerTextEdit.startCreatingText()\r\n});\r\nUi.bindButtonOnClick(\"textButtonDelete\", () => {\r\n    layerPolylineEdit.finishEditing();\r\n    layerTextEdit.deleteEditing();\r\n    layerTextEdit.finishEditing();\r\n});\r\n\r\nclass App {\r\n    currentMapName: string = null;\r\n    issueLink = \"\";\r\n    currentCommentId: number = 0;\r\n    dummyData: Data = null;\r\n\r\n    public start() {\r\n        NetUtil.get(\"https://misdake.github.io/ChipAnnotationData/list.txt\", text => {\r\n\r\n            let defaultMap: string = null;\r\n            let lines: string[] = [];\r\n            let maps: { [key: string]: string } = {};\r\n            let names: string[] = [];\r\n\r\n            if (text && text.length) {\r\n                lines = text.split(\"\\n\").filter(value => value.length > 0).map(value => value.trim());\r\n                for (let line of lines) {\r\n                    let name = line.substring(line.lastIndexOf('/') + 1);\r\n                    names.push(name);\r\n                    maps[name] = line;\r\n                }\r\n                if (lines.length > 0) {\r\n                    defaultMap = names[0];\r\n                }\r\n            }\r\n\r\n            if (!defaultMap) defaultMap = \"Fiji\";\r\n\r\n            let url_string = window.location.href;\r\n            let url = new URL(url_string);\r\n            let mapName = url.searchParams.get(\"map\") || defaultMap;\r\n            let commentIdString = url.searchParams.get(\"commentId\") || \"0\";\r\n            this.currentCommentId = parseInt(commentIdString);\r\n\r\n            Ui.bindSelect(\"mapSelect\", names, mapName, (index, newMap) => {\r\n                this.currentCommentId = 0;\r\n                this.loadMap(newMap, maps[newMap]);\r\n                this.replaceUrl();\r\n            });\r\n\r\n            this.loadMap(mapName, maps[mapName]);\r\n\r\n        });\r\n    }\r\n\r\n    loadMap(mapName: string, mapString: string) {\r\n        this.currentMapName = mapName;\r\n\r\n        NetUtil.get(mapString + \"/content.json\", mapDesc => {\r\n            let map: Map = JSON.parse(mapDesc) as Map;\r\n            canvas.loadMap(map);\r\n            canvas.requestRender();\r\n\r\n            this.issueLink = Github.getIssueLink(map.githubRepo, map.githubIssueId);\r\n\r\n            Ui.bindButtonOnClick(\"buttonSave\", () => {\r\n                layerTextEdit.finishEditing();\r\n                layerPolylineEdit.finishEditing();\r\n\r\n                let data = canvas.save();\r\n                data.title = (document.getElementById(\"dataTitle\") as HTMLInputElement).value;\r\n                if (data.title == null || data.title == \"\") {\r\n                    data.title = \"untitled\";\r\n                }\r\n\r\n                let dataString = JSON.stringify(data);\r\n                Ui.bindValue(\"dataOutput\", dataString, newValue => {\r\n                });\r\n                Ui.copyToClipboard(\"dataOutput\");\r\n                Ui.bindValue(\"dataOutput\", \"\", newValue => {\r\n                });\r\n\r\n                if (this.issueLink) {\r\n                    window.open(this.issueLink, '_blank');\r\n                }\r\n            });\r\n\r\n            Ui.bindValue(\"dataOutput\", \"\", newValue => {\r\n            });\r\n            Ui.bindValue(\"dataTitle\", \"\", newValue => {\r\n            });\r\n            Ui.bindSelect(\"dataSelect\", [], null, index => {\r\n            });\r\n\r\n            this.dummyData = new Data();\r\n            this.dummyData.title = \"\";\r\n            canvas.loadData(this.dummyData);\r\n\r\n            Ui.bindValue(\"dataOutput\", \"\", newValue => {\r\n            });\r\n\r\n            this.loadGithubComment(map, this.currentCommentId);\r\n\r\n            Ui.bindButtonOnClick(\"buttonRefreshData\", () => {\r\n                this.loadGithubComment(map, this.currentCommentId);\r\n            });\r\n        });\r\n    }\r\n\r\n    loadGithubComment(map: Map, commentId: number) {\r\n        if (map.githubRepo && map.githubIssueId) {\r\n            Github.getComments(map.githubRepo, map.githubIssueId, comments => {\r\n                let list: GithubComment[] = [];\r\n                let entries: Data[] = [];\r\n                let items: string[] = [];\r\n\r\n                list.push(null);\r\n                entries.push(this.dummyData);\r\n                items.push(\"(empty)\");\r\n\r\n                let startIndex = 0;\r\n                let startData = this.dummyData;\r\n                let startCommentId = 0;\r\n\r\n                for (let comment of comments) {\r\n                    try {\r\n                        let data: Data = JSON.parse(comment.body);\r\n                        if (data.polylines != null && data.texts != null) {\r\n                            if (data.title == null || data.title == \"\") {\r\n                                data.title = \"untitled\";\r\n                            }\r\n                            list.push(comment);\r\n                            entries.push(data);\r\n                            items.push(data.title + \" @\" + comment.user.login);\r\n                            if (commentId == comment.id) {\r\n                                startIndex = list.length - 1;\r\n                                startData = data;\r\n                                startCommentId = comment.id;\r\n                            }\r\n                        }\r\n                    } catch (e) {\r\n                    }\r\n                }\r\n\r\n                Ui.bindSelect(\"dataSelect\", items, items[startIndex], index => {\r\n                    let comment = list[index];\r\n                    let data = entries[index];\r\n                    this.loadData(map, data, comment ? comment.id : 0);\r\n                });\r\n\r\n                this.loadData(map, startData, startCommentId);\r\n            });\r\n        }\r\n    }\r\n\r\n    loadData(map: Map, data: Data, commentId: number) {\r\n        Ui.bindValue(\"dataTitle\", data.title, newValue => {\r\n        });\r\n\r\n        this.currentCommentId = commentId;\r\n\r\n        if (commentId > 0) {\r\n            this.issueLink = Github.getCommentLink(map.githubRepo, map.githubIssueId, commentId);\r\n        } else {\r\n            this.issueLink = Github.getIssueLink(map.githubRepo, map.githubIssueId);\r\n        }\r\n\r\n        Ui.bindValue(\"dataOutput\", \"\", newValue => {\r\n        });\r\n\r\n        canvas.loadData(data);\r\n        this.replaceUrl();\r\n        canvas.requestRender();\r\n    }\r\n\r\n    replaceUrl() {\r\n        let url = location.pathname + '?map=' + this.currentMapName;\r\n        if (this.currentCommentId > 0) url += '&commentId=' + this.currentCommentId;\r\n        history.replaceState(null, \"\", url);\r\n    }\r\n}\r\n\r\nnew App().start();\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}